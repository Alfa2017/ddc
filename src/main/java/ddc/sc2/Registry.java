package ddc.sc2;

import io.reactivex.Flowable;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple2;
import org.web3j.tuples.generated.Tuple3;
import org.web3j.tuples.generated.Tuple5;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.1.1.
 */
public class Registry extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_UPDATENODESIGCERT = "updateNodeSigCert";

    public static final String FUNC_GETUSERORGID = "getUserOrgId";

    public static final String FUNC_GOSTHASHFORECRECOVER = "gostHashForEcrecover";

    public static final String FUNC_UPDATENODEPROFILE = "updateNodeProfile";

    public static final String FUNC_GRANTUSERROLE = "grantUserRole";

    public static final String FUNC_NODEISENABLED = "nodeIsEnabled";

    public static final String FUNC_NODEISKNOWN = "nodeIsKnown";

    public static final String FUNC_CANDISABLE = "canDisable";

    public static final String FUNC_UPDATEUSERPROFILE = "updateUserProfile";

    public static final String FUNC_GETORGPROFILE = "getOrgProfile";

    public static final String FUNC_GETUSERNODEIDS = "getUserNodeIds";

    public static final String FUNC_DISABLE = "disable";

    public static final String FUNC_CREATEUSER = "createUser";

    public static final String FUNC_ENABLEORG = "enableOrg";

    public static final String FUNC_TRYGRANTORGROLEFROMCONSTRUCTOR = "tryGrantOrgRoleFromConstructor";

    public static final String FUNC_DISABLEORG = "disableOrg";

    public static final String FUNC_UPDATEORGADMIN = "updateOrgAdmin";

    public static final String FUNC_GETNODEIDS = "getNodeIds";

    public static final String FUNC_TRYAPPENDARCHIVEFROMCONSTRUCTOR = "tryAppendArchiveFromConstructor";

    public static final String FUNC_USERCANWRITE = "userCanWrite";

    public static final String FUNC_USERISANYNODEADMIN = "userIsAnyNodeAdmin";

    public static final String FUNC_GOSTHASH256 = "gostHash256";

    public static final String FUNC_REVOKEUSERROLE = "revokeUserRole";

    public static final String FUNC_USERCANREAD = "userCanRead";

    public static final String FUNC_UPGRADEWITH = "upgradeWith";

    public static final String FUNC_GETORGNODEIDS = "getOrgNodeIds";

    public static final String FUNC_USERISENABLED = "userIsEnabled";

    public static final String FUNC_REMOVEORGNODEID = "removeOrgNodeId";

    public static final String FUNC_GETUSERBYSIGNATURE = "getUserBySignature";

    public static final String FUNC_UPDATEORGPROFILE = "updateOrgProfile";

    public static final String FUNC_UPDATEUSERSIGCERT = "updateUserSigCert";

    public static final String FUNC_SUCCESSOR = "successor";

    public static final String FUNC_GETUSERENCCERT = "getUserEncCert";

    public static final String FUNC_USERHASROLE = "userHasRole";

    public static final String FUNC_CONTRACTNAME = "contractName";

    public static final String FUNC_USERISKNOWN = "userIsKnown";

    public static final String FUNC_PRECURSOR = "precursor";

    public static final String FUNC_GETNODEADMIN = "getNodeAdmin";

    public static final String FUNC_TRYCREATECONTAINER = "tryCreateContainer";

    public static final String FUNC_GETNODESIGCERT = "getNodeSigCert";

    public static final String FUNC_ORGIDS = "orgIds";

    public static final String FUNC_GETNODEPROFILE = "getNodeProfile";

    public static final String FUNC_DISABLENODE = "disableNode";

    public static final String FUNC_NODEIDS = "nodeIds";

    public static final String FUNC_GETUSERPROFILE = "getUserProfile";

    public static final String FUNC_UPDATENODEENCCERT = "updateNodeEncCert";

    public static final String FUNC_GETUSERORGIDANDROLEIDS = "getUserOrgIdAndRoleIds";

    public static final String FUNC_CREATEORG = "createOrg";

    public static final String FUNC_CONTRACTVERSION = "contractVersion";

    public static final String FUNC_APPENDORGNODEID = "appendOrgNodeId";

    public static final String FUNC_ORGISENABLED = "orgIsEnabled";

    public static final String FUNC_ENABLE = "enable";

    public static final String FUNC_ORGS = "orgs";

    public static final String FUNC_USERS = "users";

    public static final String FUNC_CANBEADMIN = "canBeAdmin";

    public static final String FUNC_GETORGADMIN = "getOrgAdmin";

    public static final String FUNC_UPDATEUSERENCCERT = "updateUserEncCert";

    public static final String FUNC_TRYAPPENDARCHIVE = "tryAppendArchive";

    public static final String FUNC_CREATENODE = "createNode";

    public static final String FUNC_UPDATENODEADMIN = "updateNodeAdmin";

    public static final String FUNC_TRYREVOKEORGROLE = "tryRevokeOrgRole";

    public static final String FUNC_NODES = "nodes";

    public static final String FUNC_TRYGRANTORGROLE = "tryGrantOrgRole";

    public static final String FUNC_UPDATEADMIN = "updateAdmin";

    public static final String FUNC_CANDISABLECONTAINER = "canDisableContainer";

    public static final String FUNC_GETORGIDS = "getOrgIds";

    public static final String FUNC_ENABLEUSER = "enableUser";

    public static final String FUNC_ORGISKNOWN = "orgIsKnown";

    public static final String FUNC_GETORGUSERIDS = "getOrgUserIds";

    public static final String FUNC_DISABLED = "disabled";

    public static final String FUNC_GETUSERSIGCERT = "getUserSigCert";

    public static final String FUNC_DISABLEUSER = "disableUser";

    public static final String FUNC_GETNODEENCCERT = "getNodeEncCert";

    public static final String FUNC_ENABLENODE = "enableNode";

    public static final String FUNC_ADMIN = "admin";

    public static final String FUNC_USERCANWRITEBYROLEMODEL = "userCanWriteByRoleModel";

    public static final Event NEWCONTAINER_EVENT = new Event("NewContainer", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>() {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event NEWARCHIVE_EVENT = new Event("NewArchive", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Uint256>() {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ORGROLEGRANTED_EVENT = new Event("OrgRoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>() {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ORGROLEREVOKED_EVENT = new Event("OrgRoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>() {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>() {}, new TypeReference<Bytes32>(true) {}));
    ;

    @Deprecated
    protected Registry(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Registry(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Registry(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Registry(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> updateNodeSigCert(byte[] _nodeId, byte[] _newNodeSigCert) {
        final Function function = new Function(
                FUNC_UPDATENODESIGCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.DynamicBytes(_newNodeSigCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<byte[]> getUserOrgId(String _userId) {
        final Function function = new Function(FUNC_GETUSERORGID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<byte[]> gostHashForEcrecover(byte[] _data) {
        final Function function = new Function(FUNC_GOSTHASHFORECRECOVER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_data)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<TransactionReceipt> updateNodeProfile(byte[] _nodeId, String _newNodeProfile) {
        final Function function = new Function(
                FUNC_UPDATENODEPROFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.Address(_newNodeProfile)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> grantUserRole(String _userId, byte[] _roleId, BigInteger _baseArchiveId) {
        final Function function = new Function(
                FUNC_GRANTUSERROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_roleId), 
                new org.web3j.abi.datatypes.generated.Uint256(_baseArchiveId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> nodeIsEnabled(byte[] _nodeId) {
        final Function function = new Function(FUNC_NODEISENABLED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> nodeIsKnown(byte[] _nodeId) {
        final Function function = new Function(FUNC_NODEISKNOWN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> canDisable() {
        final Function function = new Function(FUNC_CANDISABLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> updateUserProfile(String _userId, String _newUserProfile) {
        final Function function = new Function(
                FUNC_UPDATEUSERPROFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.Address(_newUserProfile)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getOrgProfile(byte[] _orgId) {
        final Function function = new Function(FUNC_GETORGPROFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<List> getUserNodeIds(String _userId) {
        final Function function = new Function(FUNC_GETUSERNODEIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> disable() {
        final Function function = new Function(
                FUNC_DISABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> createUser(byte[] _orgId, String _userId, String _profile, byte[] _sigCert, byte[] _encCert) {
        final Function function = new Function(
                FUNC_CREATEUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.Address(_profile), 
                new org.web3j.abi.datatypes.DynamicBytes(_sigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_encCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> enableOrg(byte[] _orgId) {
        final Function function = new Function(
                FUNC_ENABLEORG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> tryGrantOrgRoleFromConstructor(String _roleModel, byte[] _containerModifierId, byte[] _containerOrgRoleId, byte[] _orgId, byte[] _orgRoleId) {
        final Function function = new Function(
                FUNC_TRYGRANTORGROLEFROMCONSTRUCTOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_roleModel), 
                new org.web3j.abi.datatypes.generated.Bytes32(_containerModifierId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_containerOrgRoleId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgRoleId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> disableOrg(byte[] _orgId) {
        final Function function = new Function(
                FUNC_DISABLEORG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateOrgAdmin(byte[] _orgId, String _newOrgAdmin) {
        final Function function = new Function(
                FUNC_UPDATEORGADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.Address(_newOrgAdmin)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<List> getNodeIds() {
        final Function function = new Function(FUNC_GETNODEIDS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> tryAppendArchiveFromConstructor(String _roleModel, byte[] _modifierId, byte[] _orgRoleId, BigInteger _archiveId) {
        final Function function = new Function(
                FUNC_TRYAPPENDARCHIVEFROMCONSTRUCTOR, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_roleModel), 
                new org.web3j.abi.datatypes.generated.Bytes32(_modifierId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgRoleId), 
                new org.web3j.abi.datatypes.generated.Uint256(_archiveId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> userCanWrite(String _userId, String _container, byte[] _modifierId) {
        final Function function = new Function(FUNC_USERCANWRITE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.Address(_container), 
                new org.web3j.abi.datatypes.generated.Bytes32(_modifierId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<Boolean> userIsAnyNodeAdmin(String _userId) {
        final Function function = new Function(FUNC_USERISANYNODEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<byte[]> gostHash256(byte[] _data) {
        final Function function = new Function(FUNC_GOSTHASH256, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicBytes(_data)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<TransactionReceipt> revokeUserRole(String _userId, byte[] _roleId) {
        final Function function = new Function(
                FUNC_REVOKEUSERROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_roleId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> userCanRead(String _userId, String _container, byte[] _modifierId) {
        final Function function = new Function(FUNC_USERCANREAD, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.Address(_container), 
                new org.web3j.abi.datatypes.generated.Bytes32(_modifierId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> upgradeWith(String _successor) {
        final Function function = new Function(
                FUNC_UPGRADEWITH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_successor)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<List> getOrgNodeIds(byte[] _orgId) {
        final Function function = new Function(FUNC_GETORGNODEIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<Boolean> userIsEnabled(String _userId) {
        final Function function = new Function(FUNC_USERISENABLED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> removeOrgNodeId(byte[] _orgId, byte[] _orgNodeId) {
        final Function function = new Function(
                FUNC_REMOVEORGNODEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgNodeId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> getUserBySignature(byte[] _token, byte[] _r, byte[] _s, BigInteger _v) {
        final Function function = new Function(FUNC_GETUSERBYSIGNATURE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_token), 
                new org.web3j.abi.datatypes.generated.Bytes32(_r), 
                new org.web3j.abi.datatypes.generated.Bytes32(_s), 
                new org.web3j.abi.datatypes.generated.Uint8(_v)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> updateOrgProfile(byte[] _orgId, String _newOrgProfile) {
        final Function function = new Function(
                FUNC_UPDATEORGPROFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.Address(_newOrgProfile)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateUserSigCert(String _userId, byte[] _newUserSigCert) {
        final Function function = new Function(
                FUNC_UPDATEUSERSIGCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.DynamicBytes(_newUserSigCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> successor() {
        final Function function = new Function(FUNC_SUCCESSOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<byte[]> getUserEncCert(String _userId) {
        final Function function = new Function(FUNC_GETUSERENCCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<Boolean> userHasRole(String _userId, byte[] _roleId) {
        final Function function = new Function(FUNC_USERHASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_roleId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> contractName() {
        final Function function = new Function(FUNC_CONTRACTNAME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> userIsKnown(String _userId) {
        final Function function = new Function(FUNC_USERISKNOWN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> precursor() {
        final Function function = new Function(FUNC_PRECURSOR, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> getNodeAdmin(byte[] _nodeId) {
        final Function function = new Function(FUNC_GETNODEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> tryCreateContainer(String _roleModel, byte[] _modifierId, byte[] _orgRoleId) {
        final Function function = new Function(
                FUNC_TRYCREATECONTAINER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_roleModel), 
                new org.web3j.abi.datatypes.generated.Bytes32(_modifierId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgRoleId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<byte[]> getNodeSigCert(byte[] _nodeId) {
        final Function function = new Function(FUNC_GETNODESIGCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<byte[]> orgIds(BigInteger param0) {
        final Function function = new Function(FUNC_ORGIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<String> getNodeProfile(byte[] _nodeId) {
        final Function function = new Function(FUNC_GETNODEPROFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> disableNode(byte[] _nodeId) {
        final Function function = new Function(
                FUNC_DISABLENODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<byte[]> nodeIds(BigInteger param0) {
        final Function function = new Function(FUNC_NODEIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<String> getUserProfile(String _userId) {
        final Function function = new Function(FUNC_GETUSERPROFILE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> updateNodeEncCert(byte[] _nodeId, byte[] _newNodeEncCert) {
        final Function function = new Function(
                FUNC_UPDATENODEENCCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.DynamicBytes(_newNodeEncCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple2<byte[], List<byte[]>>> getUserOrgIdAndRoleIds(String _userId) {
        final Function function = new Function(FUNC_GETUSERORGIDANDROLEIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}, new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<Tuple2<byte[], List<byte[]>>>(
                new Callable<Tuple2<byte[], List<byte[]>>>() {
                    @Override
                    public Tuple2<byte[], List<byte[]>> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<byte[], List<byte[]>>(
                                (byte[]) results.get(0).getValue(), 
                                convertToNative((List<Bytes32>) results.get(1).getValue()));
                    }
                });
    }

    public RemoteCall<TransactionReceipt> createOrg(byte[] _orgId, byte[] _nodeId, String _orgProfile, String _admin, String _adminProfile, byte[] _adminSigCert, byte[] _adminEncCert) {
        final Function function = new Function(
                FUNC_CREATEORG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.Address(_orgProfile), 
                new org.web3j.abi.datatypes.Address(_admin), 
                new org.web3j.abi.datatypes.Address(_adminProfile), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminEncCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> contractVersion() {
        final Function function = new Function(FUNC_CONTRACTVERSION, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> appendOrgNodeId(byte[] _orgId, byte[] _orgNodeId) {
        final Function function = new Function(
                FUNC_APPENDORGNODEID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgNodeId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> orgIsEnabled(byte[] _orgId) {
        final Function function = new Function(FUNC_ORGISENABLED, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<TransactionReceipt> enable() {
        final Function function = new Function(
                FUNC_ENABLE, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple3<Boolean, String, String>> orgs(byte[] param0) {
        final Function function = new Function(FUNC_ORGS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}));
        return new RemoteCall<Tuple3<Boolean, String, String>>(
                new Callable<Tuple3<Boolean, String, String>>() {
                    @Override
                    public Tuple3<Boolean, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple3<Boolean, String, String>(
                                (Boolean) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue());
                    }
                });
    }

    public RemoteCall<Tuple5<Boolean, byte[], String, byte[], byte[]>> users(String param0) {
        final Function function = new Function(FUNC_USERS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Bytes32>() {}, new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        return new RemoteCall<Tuple5<Boolean, byte[], String, byte[], byte[]>>(
                new Callable<Tuple5<Boolean, byte[], String, byte[], byte[]>>() {
                    @Override
                    public Tuple5<Boolean, byte[], String, byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<Boolean, byte[], String, byte[], byte[]>(
                                (Boolean) results.get(0).getValue(), 
                                (byte[]) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (byte[]) results.get(3).getValue(), 
                                (byte[]) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<Boolean> canBeAdmin(String _newAdmin) {
        final Function function = new Function(FUNC_CANBEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_newAdmin)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<String> getOrgAdmin(byte[] _orgId) {
        final Function function = new Function(FUNC_GETORGADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> updateUserEncCert(String _userId, byte[] _newUserEncCert) {
        final Function function = new Function(
                FUNC_UPDATEUSERENCCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.DynamicBytes(_newUserEncCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> tryAppendArchive(byte[] _modifierId) {
        final Function function = new Function(
                FUNC_TRYAPPENDARCHIVE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_modifierId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> createNode(byte[] _orgId, String _orgProfile, byte[] _nodeId, String _nodeProfile, byte[] _nodeSigCert, byte[] _nodeEncCert, String _admin, String _adminProfile, byte[] _adminSigCert, byte[] _adminEncCert) {
        final Function function = new Function(
                FUNC_CREATENODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.Address(_orgProfile), 
                new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.Address(_nodeProfile), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeEncCert), 
                new org.web3j.abi.datatypes.Address(_admin), 
                new org.web3j.abi.datatypes.Address(_adminProfile), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminEncCert)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateNodeAdmin(byte[] _nodeId, String _newNodeAdmin) {
        final Function function = new Function(
                FUNC_UPDATENODEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.Address(_newNodeAdmin)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> tryRevokeOrgRole(byte[] _orgId, byte[] _orgRoleId) {
        final Function function = new Function(
                FUNC_TRYREVOKEORGROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgRoleId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Tuple5<Boolean, String, String, byte[], byte[]>> nodes(byte[] param0) {
        final Function function = new Function(FUNC_NODES, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}, new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<DynamicBytes>() {}, new TypeReference<DynamicBytes>() {}));
        return new RemoteCall<Tuple5<Boolean, String, String, byte[], byte[]>>(
                new Callable<Tuple5<Boolean, String, String, byte[], byte[]>>() {
                    @Override
                    public Tuple5<Boolean, String, String, byte[], byte[]> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple5<Boolean, String, String, byte[], byte[]>(
                                (Boolean) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (byte[]) results.get(3).getValue(), 
                                (byte[]) results.get(4).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> tryGrantOrgRole(byte[] _orgId, byte[] _orgRoleId) {
        final Function function = new Function(
                FUNC_TRYGRANTORGROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgRoleId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateAdmin(String _newAdmin) {
        final Function function = new Function(
                FUNC_UPDATEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_newAdmin)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> canDisableContainer() {
        final Function function = new Function(FUNC_CANDISABLECONTAINER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<List> getOrgIds() {
        final Function function = new Function(FUNC_GETORGIDS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Bytes32>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> enableUser(String _userId) {
        final Function function = new Function(
                FUNC_ENABLEUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<Boolean> orgIsKnown(byte[] _orgId) {
        final Function function = new Function(FUNC_ORGISKNOWN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<List> getOrgUserIds(byte[] _orgId) {
        final Function function = new Function(FUNC_GETORGUSERIDS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_orgId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<Boolean> disabled() {
        final Function function = new Function(FUNC_DISABLED, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteCall<byte[]> getUserSigCert(String _userId) {
        final Function function = new Function(FUNC_GETUSERSIGCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<TransactionReceipt> disableUser(String _userId) {
        final Function function = new Function(
                FUNC_DISABLEUSER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<byte[]> getNodeEncCert(byte[] _nodeId) {
        final Function function = new Function(FUNC_GETNODEENCCERT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicBytes>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteCall<TransactionReceipt> enableNode(byte[] _nodeId) {
        final Function function = new Function(
                FUNC_ENABLENODE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(_nodeId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<String> admin() {
        final Function function = new Function(FUNC_ADMIN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<Boolean> userCanWriteByRoleModel(String _userId, String _roleModel, byte[] _modifierId, byte[] _orgRoleId) {
        final Function function = new Function(FUNC_USERCANWRITEBYROLEMODEL, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_userId), 
                new org.web3j.abi.datatypes.Address(_roleModel), 
                new org.web3j.abi.datatypes.generated.Bytes32(_modifierId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgRoleId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public List<NewContainerEventResponse> getNewContainerEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NEWCONTAINER_EVENT, transactionReceipt);
        ArrayList<NewContainerEventResponse> responses = new ArrayList<NewContainerEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NewContainerEventResponse typedResponse = new NewContainerEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.container = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<NewContainerEventResponse> newContainerEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, NewContainerEventResponse>() {
            @Override
            public NewContainerEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(NEWCONTAINER_EVENT, log);
                NewContainerEventResponse typedResponse = new NewContainerEventResponse();
                typedResponse.log = log;
                typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.container = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<NewContainerEventResponse> newContainerEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(NEWCONTAINER_EVENT));
        return newContainerEventFlowable(filter);
    }

    public List<NewArchiveEventResponse> getNewArchiveEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(NEWARCHIVE_EVENT, transactionReceipt);
        ArrayList<NewArchiveEventResponse> responses = new ArrayList<NewArchiveEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            NewArchiveEventResponse typedResponse = new NewArchiveEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.container = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            typedResponse.archiveId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<NewArchiveEventResponse> newArchiveEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, NewArchiveEventResponse>() {
            @Override
            public NewArchiveEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(NEWARCHIVE_EVENT, log);
                NewArchiveEventResponse typedResponse = new NewArchiveEventResponse();
                typedResponse.log = log;
                typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.container = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                typedResponse.archiveId = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<NewArchiveEventResponse> newArchiveEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(NEWARCHIVE_EVENT));
        return newArchiveEventFlowable(filter);
    }

    public List<OrgRoleGrantedEventResponse> getOrgRoleGrantedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ORGROLEGRANTED_EVENT, transactionReceipt);
        ArrayList<OrgRoleGrantedEventResponse> responses = new ArrayList<OrgRoleGrantedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OrgRoleGrantedEventResponse typedResponse = new OrgRoleGrantedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.orgId = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            typedResponse.container = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.orgRoleId = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OrgRoleGrantedEventResponse> orgRoleGrantedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, OrgRoleGrantedEventResponse>() {
            @Override
            public OrgRoleGrantedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ORGROLEGRANTED_EVENT, log);
                OrgRoleGrantedEventResponse typedResponse = new OrgRoleGrantedEventResponse();
                typedResponse.log = log;
                typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.orgId = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                typedResponse.container = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.orgRoleId = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OrgRoleGrantedEventResponse> orgRoleGrantedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ORGROLEGRANTED_EVENT));
        return orgRoleGrantedEventFlowable(filter);
    }

    public List<OrgRoleRevokedEventResponse> getOrgRoleRevokedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(ORGROLEREVOKED_EVENT, transactionReceipt);
        ArrayList<OrgRoleRevokedEventResponse> responses = new ArrayList<OrgRoleRevokedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OrgRoleRevokedEventResponse typedResponse = new OrgRoleRevokedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.orgId = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(2).getValue();
            typedResponse.container = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.orgRoleId = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OrgRoleRevokedEventResponse> orgRoleRevokedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new io.reactivex.functions.Function<Log, OrgRoleRevokedEventResponse>() {
            @Override
            public OrgRoleRevokedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(ORGROLEREVOKED_EVENT, log);
                OrgRoleRevokedEventResponse typedResponse = new OrgRoleRevokedEventResponse();
                typedResponse.log = log;
                typedResponse.origin = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.orgId = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.modifierId = (byte[]) eventValues.getIndexedValues().get(2).getValue();
                typedResponse.container = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.orgRoleId = (byte[]) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OrgRoleRevokedEventResponse> orgRoleRevokedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(ORGROLEREVOKED_EVENT));
        return orgRoleRevokedEventFlowable(filter);
    }

    @Deprecated
    public static Registry load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Registry(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Registry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Registry(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Registry load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Registry(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Registry load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Registry(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Registry> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _precursor, byte[] _orgId, byte[] _nodeId, byte[] _nodeSigCert, byte[] _nodeEncCert, byte[] _adminSigCert, byte[] _adminEncCert) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_precursor), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeEncCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminEncCert)));
        return deployRemoteCall(Registry.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<Registry> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _precursor, byte[] _orgId, byte[] _nodeId, byte[] _nodeSigCert, byte[] _nodeEncCert, byte[] _adminSigCert, byte[] _adminEncCert) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_precursor), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeEncCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminEncCert)));
        return deployRemoteCall(Registry.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Registry> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _precursor, byte[] _orgId, byte[] _nodeId, byte[] _nodeSigCert, byte[] _nodeEncCert, byte[] _adminSigCert, byte[] _adminEncCert) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_precursor), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeEncCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminEncCert)));
        return deployRemoteCall(Registry.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<Registry> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _precursor, byte[] _orgId, byte[] _nodeId, byte[] _nodeSigCert, byte[] _nodeEncCert, byte[] _adminSigCert, byte[] _adminEncCert) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_precursor), 
                new org.web3j.abi.datatypes.generated.Bytes32(_orgId), 
                new org.web3j.abi.datatypes.generated.Bytes32(_nodeId), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_nodeEncCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminSigCert), 
                new org.web3j.abi.datatypes.DynamicBytes(_adminEncCert)));
        return deployRemoteCall(Registry.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class NewContainerEventResponse {
        public Log log;

        public String origin;

        public byte[] modifierId;

        public String container;
    }

    public static class NewArchiveEventResponse {
        public Log log;

        public String origin;

        public String container;

        public byte[] modifierId;

        public BigInteger archiveId;
    }

    public static class OrgRoleGrantedEventResponse {
        public Log log;

        public String origin;

        public byte[] orgId;

        public byte[] modifierId;

        public String container;

        public byte[] orgRoleId;
    }

    public static class OrgRoleRevokedEventResponse {
        public Log log;

        public String origin;

        public byte[] orgId;

        public byte[] modifierId;

        public String container;

        public byte[] orgRoleId;
    }
}
